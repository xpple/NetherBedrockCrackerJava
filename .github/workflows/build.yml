name: build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  compile-nbc:
    name: Compile Nether Bedrock Cracker to shared library
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Compile shared library (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        working-directory: src/main/rust
        run: |
          cargo build --release
          mv target/release/libbedrockcracker.so ../resources
      - name: Compile shared library (macos-latest)
        if: matrix.os == 'macos-latest'
        working-directory: src/main/rust
        run: |
          rustup target add aarch64-apple-darwin x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
          cargo build --release --target x86_64-apple-darwin
          lipo -create -output ../resources/libbedrockcracker.dylib target/aarch64-apple-darwin/release/libbedrockcracker.dylib target/x86_64-apple-darwin/release/libbedrockcracker.dylib
      - name: Compile shared library (windows-latest)
        if: matrix.os == 'windows-latest'
        working-directory: src/main/rust
        run: |
          cargo build --release
          mv target/release/bedrockcracker.dll ../resources
      - name: Compute SHA256 hash (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        run: sha256sum src/main/resources/libbedrockcracker.so
      - name: Compute SHA256 hash (macos-latest)
        if: matrix.os == 'macos-latest'
        run: shasum -a 256 src/main/resources/libbedrockcracker.dylib
      - name: Compute SHA256 hash (windows-latest)
        if: matrix.os == 'windows-latest'
        run: Get-FileHash -Algorithm SHA256 src/main/resources/bedrockcracker.dll

      - name: Capture shared library (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: libbedrockcracker.so
          path: src/main/resources/libbedrockcracker.so
      - name: Capture shared library (macos-latest)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: libbedrockcracker.dylib
          path: src/main/resources/libbedrockcracker.dylib
      - name: Capture shared library (windows-latest)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: bedrockcracker.dll
          path: src/main/resources/bedrockcracker.dll

  build:
    name: Build Nether Bedrock Cracker Mod
    needs: compile-nbc
    runs-on: ubuntu-latest
    env:
      LLVM_HOME: /usr/lib/llvm-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Capture shared library
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: src/main/resources/
      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: 23
          distribution: 'temurin'
      - name: Make Gradle wrapper executable
        run: |
          chmod +x ./gradlew
          chmod +x ./jextract/gradlew
      - name: Install LLVM 13
        run: |
          wget --no-verbose https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          tar -xf clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          sudo mv clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04 /usr/lib/llvm-13
      - name: Compile jextract
        working-directory: jextract
        run: ./gradlew --stacktrace -Pjdk_home=$JAVA_HOME -Pllvm_home=$LLVM_HOME clean verify
      - name: Install cbindgen
        working-directory: src/main/rust
        run: cargo install --force cbindgen
      - name: Build
        run: ./gradlew build
      - name: Capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NetherBedrockCracker
          path: build/libs/
